#!/bin/sh

# shell variables
local_port=0
ssh_key=~/.ssh/id_rsa
ssh_user=ubuntu
ssh_host=localhost
ssh_port=22
proxy_type=socks5
pid_file=/tmp/envoy.pid

# Set the local port
set_local_port() {
  # if the local_port is still 0, set a default value
  if [ "$local_port" -eq "0" ]; then
    if [ "$proxy_type" = "http" ]; then
      local_port=8080
    else
      local_port=1080
    fi
  fi
}

# Open http proxy
open_http_proxy() {
  echo "Opening http proxy on port $local_port..."
  ssh -N -L $local_port:localhost:3128 -i $ssh_key $ssh_user@$ssh_host -p $ssh_port &
}

# Open socks5 proxy
open_socks5_proxy() {
  echo "Opening socks5 proxy on port $local_port..."
  ssh -N -D $local_port -i $ssh_key $ssh_user@$ssh_host -p $ssh_port &
}

# Save the proxy tunnel pid
store_proxy_pid() {
  ssh_pid=$!
  echo $ssh_pid > $pid_file
}

# Open the proxy tunnel
open_proxy() {
  set_local_port
  if [ "$proxy_type" = "http" ]; then
    open_http_proxy
  else
    open_socks5_proxy
  fi
  store_proxy_pid
  echo "Done (pid $ssh_pid)"
  exit 0
}

# Close the proxy tunnel
close_proxy() {
  if [ -f $pid_file ]; then
    ssh_pid=`cat $pid_file`
    echo "Closing proxy (pid $ssh_pid)..."
    kill $ssh_pid
    rm $pid_file
    echo "Done!"
  else
    echo "File not found: $pid_file"
    echo "There does not appear to be an open proxy..."
  fi
  exit 0
}

# Print usage instructions
usage() {
  echo "$0 [-h] [-k SSH_KEY] [-u SSH_USER] [-d SSH_HOST] [-p SSH_PORT] [-l LOCAL_PROXY_PORT] [-t PROXY_TYPE] {open|close|help}"
}

# Print help instructions
full_help() {
  usage
  echo "\nCommand options...\n"
  echo "open\t\t\tOpen a proxy using optional flags"
  echo "close\t\t\tClose a running proxy"
  echo "help\t\t\tShow this help message"
  echo "\nFlags...\n"
  echo "-k SSH_KEY\t\tPrivate key (default: $ssh_key)"
  echo "-u SSH_USER\t\tSSH username (default: $ssh_user)"
  echo "-d SSH_HOST\t\tDomain name or IP connecting to (default: $ssh_host)"
  echo "\t\t\tYes, that is localhost on purpose, so at least pass this option!"
  echo "-p SSH_PORT\t\tSSH port on server (default: $ssh_port)"
  echo "-t PROXY_TYPE\t\tProxy type (default: $proxy_type)"
  echo "-l LOCAL_PROXY_PORT\tLocal proxy port (default based on PROXY_TYPE)"
  echo "\t\t\tsocks5: 1080"
  echo "\t\t\thttp: 8080"
  echo "-h\t\t\tBasic usage info"
  exit 1
}

# Invalid option
invalid_option() {
  if [ $# -gt 0 ]; then
    echo "'$1' is an invalid option!\n"
  fi
  usage
  exit 1
}

# Flags
while getopts k:u:d:p:l:t:h OPTION
do
  case ${OPTION} in
    k) ssh_key=${OPTARG} ;;
    u) ssh_user=${OPTARG} ;;
    d) ssh_host=${OPTARG} ;;
    p) ssh_port=${OPTARG} ;;
    l) local_port=${OPTARG} ;;
    t) proxy_type=${OPTARG} ;;
    h)
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

# Execution
case "$1" in
  'open')   open_proxy ;;
  'close')  close_proxy ;;
  'help')   full_help ;;
  *)        invalid_option $1 ;;
esac
